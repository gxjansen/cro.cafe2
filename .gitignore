# Claude-Flow and SPARC Agent Files - EXCLUDE ALL
.claude/
claude-flow
claude-flow.config.json
memory/
memory-bank.md
coordination/
coordination.md
.roo/
.roomodes
phase_*.md
architecture/
CLAUDE.md

# Development Documentation - Keep Only Implementation Docs
devdocs/
project-docs/
project/implementation-plan.md
project/0*-*.md
backup/
project/

# Docker and Container Files - INCLUDE THESE FOR PROJECT SETUP
# docker-compose.yml    # INCLUDED - Docker orchestration
# DOCKER_SETUP.md       # INCLUDED - Setup documentation  
# Dockerfile            # INCLUDED - Production container
# Dockerfile.dev        # INCLUDED - Development container
# docker-start.sh       # INCLUDED - Management script
# start-docker.command  # INCLUDED - macOS launcher
# .dockerignore         # INCLUDED - Docker ignore rules

# Exclude old/unused Docker files
claude-docker.sh
.devcontainer/

# Astro Website Files - INCLUDE THESE
# (Commented out means they WILL be tracked)
# src/
# public/
# astro.config.mjs
# package.json
# tsconfig.json
# tailwind.config.mjs

# Standard Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock
.grunt
lib-cov
coverage
.nyc_output
.cache

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env.production
.env.local
.env.github

# parcel-bundler cache (https://parceljs.org/)
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Astro build output
dist/

# Vite build output
dist/

# Gatsby files
.cache/

# Vue.js
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# IDEs and editors
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp

# Log files
*.log
logs/

# Testing
coverage/
.nyc_output/

# TypeScript
*.tsbuildinfo

# Astro specific
.astro/

# Build tools
.rollup.cache/
.turbo/

# Test folders and documentation
test-content-output/
test-crud-output/
# tests/  # Commented out - tests should be in version control
docs/

# Demo and test files
**/test-*
**/demo-*
**/*-test.*
**/*-demo.*
test-*.html
demo-*.html

# Misc
*.tgz
*.tar.gz
missing-guest-images.md

# Local Netlify folder
.netlify

# Development service worker build
dev-dist/

# Synology temporary directories
.SynologyWorkingDirectory/

# Development and Test Files
clear-service-worker.html
dev-server.log
sanitize-linkedin-data.js
skills-filter-data.json
test-episode-spacing.js
test-touch-targets.js
test-touch-targets.mjs
Icon
SEARCH_FIX_SUMMARY.md

# Subdomain redirect files (handled by Netlify)
subdomain-redirects/

# Development scripts and utilities
# IMPORTANT: Be specific about which scripts to ignore to avoid excluding critical workflow scripts

# Debug and diagnostic scripts (safe to ignore)
scripts/debug-*.ts
scripts/diagnose-*.ts
scripts/verify-*.ts

# One-off fix and cleanup scripts (safe to ignore)
scripts/fix-*.js
scripts/clean-*.ts
scripts/clear-*.js

# Download scripts (keep only production ones)
scripts/download-*.js
!scripts/sync-images.ts              # KEEP: Used by sync-images workflow
!scripts/sync-linkedin-profile-pictures.ts  # KEEP: Used by LinkedIn sync workflow

# Critical generation scripts - DO NOT IGNORE THESE
!scripts/generate-episodes.ts        # KEEP: Used by sync-episodes workflow
!scripts/generate-guests.ts          # KEEP: Used by sync-guests workflow
!scripts/generate-hosts.ts           # KEEP: Used by sync-hosts workflow
!scripts/generate-platforms.ts       # KEEP: Used by sync-platforms workflow
!scripts/generate-content*.ts        # KEEP: Content generation variants
!scripts/generate-language-sitemaps.ts # KEEP: Sitemap generation

# Validation scripts - keep the ones used by npm scripts
scripts/validate-*.ts
!scripts/validate-content.ts         # KEEP: Used by npm run validate-content
!scripts/validate-schema.ts          # KEEP: Used by npm run validate-schema

# Check scripts - keep the ones used by npm scripts
scripts/check-*.ts
!scripts/check-accessibility.ts      # KEEP: Used by npm run check:accessibility
!scripts/check-accessibility-detailed.ts # KEEP: Used by npm run check:accessibility:detailed

# SEO and optimization
scripts/optimize-*.ts
!scripts/optimize-episode-seo.ts     # KEEP: Used by npm run optimize-seo

# Other utility scripts
scripts/import-*.ts
scripts/linkedin-*.js
scripts/n8n-*.js
scripts/workflow-*.yml
scripts/create-*.js
