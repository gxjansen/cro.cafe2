---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import { getEpisodesByLanguage, getEpisodeUrl, formatDuration } from '../../utils/content';
import type { Language } from '../../types';

const language: Language = 'en';
const episodes = await getEpisodesByLanguage(language);

// SEO metadata
const title = 'All Episodes - CRO.CAFE Podcast';
const description = 'Browse all episodes of the CRO.CAFE podcast. Listen to conversations about CRO, experimentation, and digital optimization with industry leaders.';
---

<BaseLayout 
  title={title}
  description={description}
  language={language}
  canonical="https://cro.cafe/episodes"
>
  <Header language={language} currentPath="/episodes" />
  
  <main class="flex-grow">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <!-- Page Header -->
      <div class="text-center mb-12">
        <h1 class="text-4xl md:text-5xl font-heading font-bold text-gray-900 dark:text-white mb-4">
          All Episodes
        </h1>
        <p class="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
          Dive into our complete collection of conversations about CRO, experimentation, and digital optimization.
        </p>
      </div>

      <!-- Episodes Grid -->
      <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
        {episodes.map((episode) => (
          <article class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300">
            <a href={getEpisodeUrl(episode)} class="block">
              {episode.data.imageUrl && (
                <div class="aspect-w-16 aspect-h-9 overflow-hidden">
                  <img 
                    src={episode.data.imageUrl} 
                    alt={episode.data.title}
                    class="w-full h-48 object-cover hover:scale-105 transition-transform duration-300"
                    loading="lazy"
                  />
                </div>
              )}
              <div class="p-6">
                <div class="flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400 mb-3">
                  <span>S{episode.data.season} E{episode.data.episode}</span>
                  <span>•</span>
                  <span>{formatDuration(episode.data.duration)}</span>
                  <span>•</span>
                  <time datetime={episode.data.pubDate.toISOString()}>
                    {new Date(episode.data.pubDate).toLocaleDateString('en-US', { 
                      year: 'numeric', 
                      month: 'short', 
                      day: 'numeric' 
                    })}
                  </time>
                </div>
                <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-2 line-clamp-2">
                  {episode.data.title}
                </h2>
                <p class="text-gray-600 dark:text-gray-400 line-clamp-3 mb-4">
                  {episode.data.description}
                </p>
                {episode.data.guests.length > 0 && (
                  <div class="text-sm text-gray-500 dark:text-gray-400">
                    <span class="font-medium">Guests:</span> {episode.data.guests.join(', ')}
                  </div>
                )}
              </div>
            </a>
          </article>
        ))}
      </div>

      {episodes.length === 0 && (
        <div class="text-center py-12">
          <p class="text-gray-500 dark:text-gray-400">No episodes available yet. Check back soon!</p>
        </div>
      )}
    </div>
  </main>
</BaseLayout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>