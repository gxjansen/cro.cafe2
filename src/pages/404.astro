---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import * as Sentry from '@sentry/astro';

// Check if the URL needs a trailing slash redirect
const url = new URL(Astro.url);
const pathname = url.pathname;

// Check if this is a missing trailing slash situation
if (!pathname.endsWith('/') && !pathname.match(/\.[a-zA-Z0-9]+$/) && !pathname.startsWith('/api/')) {
  // This is likely a missing trailing slash - redirect to the correct URL
  return Astro.redirect(`${pathname}/`, 301);
}

// Set response status to 404
Astro.response.status = 404;

// Track 404 in Sentry with proper context
if (typeof Sentry !== 'undefined') {
  // Use withScope to set transaction context
  Sentry.withScope((scope) => {
    // Set transaction name
    scope.setTransactionName('404 Page Not Found');
    
    // Set tags
    scope.setTags({
      type: '404',
      url: url.href,
      pathname: pathname,
      referrer: Astro.request.headers.get('referer') || 'direct',
      'http.status_code': '404',
      'http.method': Astro.request.method,
      'http.url': url.href,
      'http.path': pathname,
    });
    
    // Set context
    scope.setContext('http', {
      method: Astro.request.method,
      url: url.href,
      query_string: url.search,
      user_agent: Astro.request.headers.get('user-agent'),
      status_code: 404,
    });
    
    // Capture the message
    Sentry.captureMessage(`404 Page Not Found: ${pathname}`, 'warning');
  });
}
---

<BaseLayout 
  title="Page Not Found - CRO.CAFE"
  description="The page you're looking for doesn't exist."
  noIndex={true}
>
  <Header currentPath="/404" />
  
  <main id="main-content" class="flex-1">
    <div class="min-h-[60vh] flex items-center justify-center px-4">
    <div class="text-center max-w-2xl mx-auto">
      <h1 class="text-6xl font-bold text-brand-500 mb-4">
        404 - Page Not Found
      </h1>
      <p class="text-3xl font-semibold mb-6">The page you're looking for doesn't exist</p>
      <p class="text-lg text-gray-400 mb-8">
        Sorry, we couldn't find the page you're looking for. 
        It might have been moved or no longer exists.
      </p>
      <div class="space-y-4">
        <a 
          href="/" 
          class="inline-block px-6 py-3 bg-brand-500 text-white rounded-lg hover:bg-brand-600 transition-colors"
        >
          Go to Homepage
        </a>
        <div class="mt-4">
          <a 
            href="/episodes/" 
            class="text-brand-500 hover:text-brand-600 mr-6"
          >
            Browse Episodes
          </a>
          <a 
            href="/guests/" 
            class="text-brand-500 hover:text-brand-600"
          >
            View Guests
          </a>
        </div>
      </div>
    </div>
  </div>
  </main>
  
  <script>
    // Client-side 404 tracking for Sentry
    import * as Sentry from '@sentry/browser';
    
    // Ensure Sentry is initialized and track 404
    document.addEventListener('DOMContentLoaded', () => {
      // Debug logging
      console.log('404 page loaded:', window.location.pathname);
      console.log('Sentry available:', typeof Sentry !== 'undefined');
      
      // Track 404 on client-side with proper context
      if (typeof window !== 'undefined' && Sentry && Sentry.captureMessage) {
        console.log('Sending 404 to Sentry...');
        
        // Use withScope to set transaction context
        Sentry.withScope((scope) => {
          // Set transaction name
          scope.setTransactionName('404 Page Not Found');
          
          // Set tags
          scope.setTags({
            type: '404-client',
            url: window.location.href,
            pathname: window.location.pathname,
            referrer: document.referrer || 'direct',
            'http.status_code': '404',
            'navigation.type': 'page_load',
          });
          
          // Set context
          scope.setContext('browser', {
            name: navigator.userAgent,
            url: window.location.href,
            pathname: window.location.pathname,
          });
          
          // Set user context if available
          scope.setContext('request', {
            url: window.location.href,
            method: 'GET',
            referrer: document.referrer,
          });
          
          // Capture the message
          Sentry.captureMessage(`404 Page Not Found: ${window.location.pathname}`, 'warning');
          console.log('404 sent to Sentry');
        });
        
        // Also capture as an exception for better visibility
        Sentry.captureException(new Error(`404 Page Not Found: ${window.location.pathname}`), {
          tags: {
            type: '404-exception',
            pathname: window.location.pathname,
          },
          level: 'warning',
        });
      } else {
        console.error('Sentry not available for 404 tracking');
      }
    });
  </script>
</BaseLayout>