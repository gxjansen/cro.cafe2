---
import { Image } from 'astro:assets';

export interface Props {
  imageUrl?: string;
  alt: string;
  class?: string;
  width?: number;
  height?: number;
}

const { 
  imageUrl, 
  alt, 
  class: className = '',
  width = 400,
  height = 400
} = Astro.props;

// Fallback gradient background for episodes without images
const fallbackGradient = `bg-gradient-to-br from-primary-400 to-accent-500`;

// Standardized alt text format for episodes
const standardizedAlt = alt && alt.includes('CRO.CAFE') ? alt : `${alt || 'Episode'} - CRO.CAFE podcast episode`;
---

{imageUrl ? (
  <Image 
    src={imageUrl} 
    alt={standardizedAlt}
    width={width}
    height={height}
    class={className}
    loading="lazy"
    format="webp"
    quality={85}
    onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
  />
  <div class={`hidden items-center justify-center ${fallbackGradient} ${className}`}>
    <svg class="w-1/3 h-1/3 text-white/50" fill="currentColor" viewBox="0 0 24 24" role="presentation" aria-hidden="true">
      <path d="M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z"/>
    </svg>
  </div>
) : (
  <div class={`flex items-center justify-center ${fallbackGradient} ${className}`}>
    <svg class="w-1/3 h-1/3 text-white/50" fill="currentColor" viewBox="0 0 24 24" role="presentation" aria-hidden="true">
      <path d="M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z"/>
    </svg>
  </div>
)}

<style>
  /* Ensure images maintain aspect ratio */
  img {
    object-fit: cover;
  }
</style>